---
layout: notes
title: CS 170 Lecture 16
topic: Zero Sum Games
---

Two person zero sum games.

$!m \times n!$ payoff matrix G.

Row mixed strategy: $!x = (x\_1, \dots, x\_m)!$
Column mixed strategy: $!y = (y\_1, \dots y\_n)!$

Payoff for strategy pair $!(x, y)!$:

$$p(x,y) = x^TGy$$

That is,

    $$\sum_i x_i \left(\sum_j Gi,jy_i \right) = \sum_j \left(\sum_i x_i G i,j\right) y_j$$

Row goes first:
find x, where best row is not too low..

    $$R = \min_y \max_x (x^T G y)$$

Note: $!x!$ can be $!(0,0,\cdots,1,\cdots,0)!$

Example: Roshambo. Value of R?

     | | R | P | S |
    $!x_1!$|R|  0| -1|  1|
    $!x_2!$|P|  1|  0| -1|
    $!x_3!$|S| -1|  1|  0|

Pick R, P, S to maximize

    $$min\{ x_2 - x_3, -x_1 + x_3, x_1 - x_2 \}$$

Linear programming dual, means $!z = w!$, it doesn't matter who goes first. 

[Von Neumann's minimax theorem](http://en.wikipedia.org/wiki/Minimax)

[Nash's theorem](http://en.wikipedia.org/wiki/Nash_equilibrium)

## Simplex Algorithm
Start at a vertex, move to better neighboring vertex, until there is no better
neighboring vertex. 

A vertex is where two inequities are forced to be equal. 

ex: $!x\_1 = 0!$, and $!x\_2 = 0!$.

To find a neighbor, take one of the two constraints, and make it not tight. Then
tie another constraint. 

In three dimensions, we need 3 tight constraints instead of two.

Two tight constraints will define a line, which is not a point. 

In n dimensions, we need n tight constraints. 

n constraints define a vertex in $!\mathbb{R}^n!$

* Two tasks in simplex algorithm
  * Check optimality of vertex
  * Where to go next

Generic LP:

    $$\max c^T x
    Ax \le b
    x \ge 0$$

Start at origin, supposing it is feasible.

Vertex since intersection of n constraints of form $!x\_i = 0!$

Optimal? 

If all $!C[i]!$ is negative, and we are at origin, then we are optimal. 

If there is a $!C[i] > 0!$, and we can increase $!x\_i!$, then we are not
optimal. 

$!x\_i \ge 0!$ is no longer tight, but new constraint is. 


